from sqlalchemy.ext.asyncio import AsyncSession
from db import SessionLocal
from models import Payment

async def process_payment(order_id, amount):
    async with SessionLocal() as session:
        try:
            payment = Payment(order_id=order_id, status="PAID")
            session.add(payment)
            await session.commit()
            print(f"‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id}")
            return True
        except Exception as e:
            await session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞–∫–∞–∑–∞ {order_id}: {e}")
            return False

async def compensate_payment(order_id):
    async with SessionLocal() as session:
        try:
            payment = await session.get(Payment, order_id)
            if payment:
                await session.delete(payment)
                await session.commit()
                print(f"üîÑ –û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id}")
        except Exception as e:
            await session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ–ø–ª–∞—Ç—ã: {e}")
